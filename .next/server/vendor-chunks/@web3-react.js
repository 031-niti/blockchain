"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@web3-react";
exports.ids = ["vendor-chunks/@web3-react"];
exports.modules = {

/***/ "(ssr)/./node_modules/@web3-react/core/dist/hooks.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web3-react/core/dist/hooks.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getPriorityConnector = exports.getSelectedConnector = exports.initializeConnector = void 0;\nconst store_1 = __webpack_require__(/*! @web3-react/store */ \"(ssr)/./node_modules/@web3-react/store/dist/index.js\");\nconst react_1 = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\nconst zustand_1 = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.js\");\nconst traditional_1 = __webpack_require__(/*! zustand/traditional */ \"(ssr)/./node_modules/zustand/esm/traditional.js\");\nlet DynamicProvider;\nfunction importProvider() {\n    return __awaiter(this, void 0, void 0, function* () {\n        if (DynamicProvider === undefined) {\n            try {\n                const { Web3Provider } = yield Promise.resolve().then(() => __importStar(__webpack_require__(/*! @ethersproject/providers */ \"(ssr)/./node_modules/@ethersproject/providers/lib/index.js\")));\n                DynamicProvider = Web3Provider;\n            }\n            catch (_a) {\n                console.debug('@ethersproject/providers not available');\n                DynamicProvider = null;\n            }\n        }\n    });\n}\n/**\n * Wraps the initialization of a `connector`. Creates a zustand `store` with `actions` bound to it, and then passes\n * these to the connector as specified in `f`. Also creates a variety of `hooks` bound to this `store`.\n *\n * @typeParam T - The type of the `connector` returned from `f`.\n * @param f - A function which is called with `actions` bound to the returned `store`.\n * @returns [connector, hooks, store] - The initialized connector, a variety of hooks, and a zustand store.\n */\nfunction initializeConnector(f) {\n    const [store, actions] = (0, store_1.createWeb3ReactStoreAndActions)();\n    const connector = f(actions);\n    const stateHooks = getStateHooks(store);\n    const derivedHooks = getDerivedHooks(stateHooks);\n    const augmentedHooks = getAugmentedHooks(connector, stateHooks, derivedHooks);\n    return [connector, Object.assign(Object.assign(Object.assign({}, stateHooks), derivedHooks), augmentedHooks), store];\n}\nexports.initializeConnector = initializeConnector;\nfunction computeIsActive({ chainId, accounts, activating }) {\n    return Boolean(chainId && accounts && !activating);\n}\n/**\n * Creates a variety of convenience `hooks` that return data associated with a particular passed connector.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getSelectedConnector(...initializedConnectors) {\n    function getIndex(connector) {\n        const index = initializedConnectors.findIndex(([initializedConnector]) => connector === initializedConnector);\n        if (index === -1)\n            throw new Error('Connector not found');\n        return index;\n    }\n    function useSelectedStore(connector) {\n        const store = initializedConnectors[getIndex(connector)][2];\n        if (!store)\n            throw new Error('Stores not passed');\n        return store;\n    }\n    // the following code calls hooks in a map a lot, which violates the eslint rule.\n    // this is ok, though, because initializedConnectors never changes, so the same hooks are called each time\n    function useSelectedChainId(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useChainId }]) => useChainId());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccounts(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccounts }]) => useAccounts());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActivating(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActivating }]) => useIsActivating());\n        return values[getIndex(connector)];\n    }\n    function useSelectedAccount(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useAccount }]) => useAccount());\n        return values[getIndex(connector)];\n    }\n    function useSelectedIsActive(connector) {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        return values[getIndex(connector)];\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getSelectedConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function useSelectedProvider(connector, network) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useProvider }], i) => useProvider(network, i === index));\n        return values[index];\n    }\n    function useSelectedENSNames(connector, provider) {\n        const index = getIndex(connector);\n        const values = initializedConnectors.map(([, { useENSNames }], i) => \n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        useENSNames(i === index ? provider : undefined));\n        return values[index];\n    }\n    function useSelectedENSName(connector, provider) {\n        const index = getIndex(connector);\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useENSName }], i) => useENSName(i === index ? provider : undefined));\n        return values[index];\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n    };\n}\nexports.getSelectedConnector = getSelectedConnector;\n/**\n * Creates a variety of convenience `hooks` that return data associated with the first of the `initializedConnectors`\n * that is active.\n *\n * @param initializedConnectors - Two or more [connector, hooks(, store)] arrays, as returned from initializeConnector.\n * @returns hooks - A variety of convenience hooks that wrap the hooks returned from initializeConnector.\n */\nfunction getPriorityConnector(...initializedConnectors) {\n    const { useSelectedStore, useSelectedChainId, useSelectedAccounts, useSelectedIsActivating, useSelectedAccount, useSelectedIsActive, useSelectedProvider, useSelectedENSNames, useSelectedENSName, } = getSelectedConnector(...initializedConnectors);\n    function usePriorityConnector() {\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        const values = initializedConnectors.map(([, { useIsActive }]) => useIsActive());\n        const index = values.findIndex((isActive) => isActive);\n        return initializedConnectors[index === -1 ? 0 : index][0];\n    }\n    function usePriorityStore() {\n        return useSelectedStore(usePriorityConnector());\n    }\n    function usePriorityChainId() {\n        return useSelectedChainId(usePriorityConnector());\n    }\n    function usePriorityAccounts() {\n        return useSelectedAccounts(usePriorityConnector());\n    }\n    function usePriorityIsActivating() {\n        return useSelectedIsActivating(usePriorityConnector());\n    }\n    function usePriorityAccount() {\n        return useSelectedAccount(usePriorityConnector());\n    }\n    function usePriorityIsActive() {\n        return useSelectedIsActive(usePriorityConnector());\n    }\n    /**\n     * @typeParam T - A type argument must only be provided if one or more of the connectors passed to\n     * getPriorityConnector is using `connector.customProvider`, in which case it must match every possible type of this\n     * property, over all connectors.\n     */\n    function usePriorityProvider(network) {\n        return useSelectedProvider(usePriorityConnector(), network);\n    }\n    function usePriorityENSNames(provider) {\n        return useSelectedENSNames(usePriorityConnector(), provider);\n    }\n    function usePriorityENSName(provider) {\n        return useSelectedENSName(usePriorityConnector(), provider);\n    }\n    return {\n        useSelectedStore,\n        useSelectedChainId,\n        useSelectedAccounts,\n        useSelectedIsActivating,\n        useSelectedAccount,\n        useSelectedIsActive,\n        useSelectedProvider,\n        useSelectedENSNames,\n        useSelectedENSName,\n        usePriorityConnector,\n        usePriorityStore,\n        usePriorityChainId,\n        usePriorityAccounts,\n        usePriorityIsActivating,\n        usePriorityAccount,\n        usePriorityIsActive,\n        usePriorityProvider,\n        usePriorityENSNames,\n        usePriorityENSName,\n    };\n}\nexports.getPriorityConnector = getPriorityConnector;\nconst CHAIN_ID = ({ chainId }) => chainId;\nconst ACCOUNTS = ({ accounts }) => accounts;\nconst ACTIVATING = ({ activating }) => activating;\nconst ACCOUNTS_EQUALITY_CHECKER = (oldAccounts, newAccounts) => (oldAccounts === undefined && newAccounts === undefined) ||\n    (oldAccounts !== undefined &&\n        oldAccounts.length === (newAccounts === null || newAccounts === void 0 ? void 0 : newAccounts.length) &&\n        oldAccounts.every((oldAccount, i) => oldAccount === newAccounts[i]));\nfunction getStateHooks(store) {\n    function useChainId() {\n        return (0, zustand_1.useStore)(store, CHAIN_ID);\n    }\n    function useAccounts() {\n        return (0, traditional_1.useStoreWithEqualityFn)(store, ACCOUNTS, ACCOUNTS_EQUALITY_CHECKER);\n    }\n    function useIsActivating() {\n        return (0, zustand_1.useStore)(store, ACTIVATING);\n    }\n    return { useChainId, useAccounts, useIsActivating };\n}\nfunction getDerivedHooks({ useChainId, useAccounts, useIsActivating }) {\n    function useAccount() {\n        var _a;\n        return (_a = useAccounts()) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    function useIsActive() {\n        const chainId = useChainId();\n        const accounts = useAccounts();\n        const activating = useIsActivating();\n        return computeIsActive({\n            chainId,\n            accounts,\n            activating,\n        });\n    }\n    return { useAccount, useIsActive };\n}\n/**\n * @returns ENSNames - An array of length `accounts.length` which contains entries which are either all `undefined`,\n * indicated that names cannot be fetched because there's no provider, or they're in the process of being fetched,\n * or `string | null`, depending on whether an ENS name has been set for the account in question or not.\n */\nfunction useENS(provider, accounts = []) {\n    const [ENSNames, setENSNames] = (0, react_1.useState)();\n    (0, react_1.useEffect)(() => {\n        if (provider && accounts.length) {\n            let stale = false;\n            Promise.all(accounts.map((account) => provider.lookupAddress(account)))\n                .then((ENSNames) => {\n                if (stale)\n                    return;\n                setENSNames(ENSNames);\n            })\n                .catch((error) => {\n                if (stale)\n                    return;\n                console.debug('Could not fetch ENS names', error);\n                setENSNames(new Array(accounts.length).fill(null));\n            });\n            return () => {\n                stale = true;\n                setENSNames(undefined);\n            };\n        }\n    }, [provider, accounts]);\n    return ENSNames !== null && ENSNames !== void 0 ? ENSNames : new Array(accounts.length).fill(undefined);\n}\nfunction getAugmentedHooks(connector, { useAccounts, useChainId }, { useAccount, useIsActive }) {\n    /**\n     * Avoid type erasure by returning the most qualified type if not otherwise set.\n     * Note that this function's return type is `T | undefined`, but there is a code path\n     * that returns a Web3Provider, which could conflict with a user-provided T. So,\n     * it's important that users only provide an override for T if they know that\n     * `connector.customProvider` is going to be defined and of type T.\n     *\n     * @typeParam T - A type argument must only be provided if using `connector.customProvider`, in which case it\n     * must match the type of this property.\n     */\n    function useProvider(network, enabled = true) {\n        const isActive = useIsActive();\n        const chainId = useChainId();\n        // ensure that Provider is going to be available when loaded if @ethersproject/providers is installed\n        const [loaded, setLoaded] = (0, react_1.useState)(DynamicProvider !== undefined);\n        (0, react_1.useEffect)(() => {\n            if (loaded)\n                return;\n            let stale = false;\n            void importProvider().then(() => {\n                if (stale)\n                    return;\n                setLoaded(true);\n            });\n            return () => {\n                stale = true;\n            };\n        }, [loaded]);\n        return (0, react_1.useMemo)(() => {\n            // to ensure connectors remain fresh, we condition re-renders on loaded, isActive and chainId\n            void loaded && isActive && chainId;\n            if (enabled) {\n                if (connector.customProvider)\n                    return connector.customProvider;\n                // see tsdoc note above for return type explanation.\n                else if (DynamicProvider && connector.provider)\n                    return new DynamicProvider(connector.provider, network);\n            }\n        }, [loaded, enabled, isActive, chainId, network]);\n    }\n    function useENSNames(provider) {\n        const accounts = useAccounts();\n        return useENS(provider, accounts);\n    }\n    function useENSName(provider) {\n        var _a;\n        const account = useAccount();\n        const accounts = (0, react_1.useMemo)(() => (account === undefined ? undefined : [account]), [account]);\n        return (_a = useENS(provider, accounts)) === null || _a === void 0 ? void 0 : _a[0];\n    }\n    return { useProvider, useENSNames, useENSName };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/core/dist/hooks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/core/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web3-react/core/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n__exportStar(__webpack_require__(/*! ./hooks */ \"(ssr)/./node_modules/@web3-react/core/dist/hooks.js\"), exports);\n__exportStar(__webpack_require__(/*! ./mocks */ \"(ssr)/./node_modules/@web3-react/core/dist/mocks.js\"), exports);\n__exportStar(__webpack_require__(/*! ./provider */ \"(ssr)/./node_modules/@web3-react/core/dist/provider.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvY29yZS9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyxvRUFBUztBQUM5QixhQUFhLG1CQUFPLENBQUMsb0VBQVM7QUFDOUIsYUFBYSxtQkFBTyxDQUFDLDBFQUFZIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmxvY2tjaGFpbi8uL25vZGVfbW9kdWxlcy9Ad2ViMy1yZWFjdC9jb3JlL2Rpc3QvaW5kZXguanM/ODdjNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2NyZWF0ZUJpbmRpbmcgPSAodGhpcyAmJiB0aGlzLl9fY3JlYXRlQmluZGluZykgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIHZhciBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihtLCBrKTtcbiAgICBpZiAoIWRlc2MgfHwgKFwiZ2V0XCIgaW4gZGVzYyA/ICFtLl9fZXNNb2R1bGUgOiBkZXNjLndyaXRhYmxlIHx8IGRlc2MuY29uZmlndXJhYmxlKSkge1xuICAgICAgZGVzYyA9IHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbigpIHsgcmV0dXJuIG1ba107IH0gfTtcbiAgICB9XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG8sIGsyLCBkZXNjKTtcbn0pIDogKGZ1bmN0aW9uKG8sIG0sIGssIGsyKSB7XG4gICAgaWYgKGsyID09PSB1bmRlZmluZWQpIGsyID0gaztcbiAgICBvW2syXSA9IG1ba107XG59KSk7XG52YXIgX19leHBvcnRTdGFyID0gKHRoaXMgJiYgdGhpcy5fX2V4cG9ydFN0YXIpIHx8IGZ1bmN0aW9uKG0sIGV4cG9ydHMpIHtcbiAgICBmb3IgKHZhciBwIGluIG0pIGlmIChwICE9PSBcImRlZmF1bHRcIiAmJiAhT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGV4cG9ydHMsIHApKSBfX2NyZWF0ZUJpbmRpbmcoZXhwb3J0cywgbSwgcCk7XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2hvb2tzXCIpLCBleHBvcnRzKTtcbl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9tb2Nrc1wiKSwgZXhwb3J0cyk7XG5fX2V4cG9ydFN0YXIocmVxdWlyZShcIi4vcHJvdmlkZXJcIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/core/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/core/dist/mocks.js":
/*!*****************************************************!*\
  !*** ./node_modules/@web3-react/core/dist/mocks.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MockEIP1193Provider = void 0;\nconst eventemitter3_1 = __webpack_require__(/*! eventemitter3 */ \"(ssr)/./node_modules/eventemitter3/index.js\");\nclass MockEIP1193Provider extends eventemitter3_1.EventEmitter {\n    constructor() {\n        super(...arguments);\n        this.eth_chainId = jest.fn((chainId) => chainId);\n        this.eth_accounts = jest.fn((accounts) => accounts);\n        this.eth_requestAccounts = jest.fn((accounts) => accounts);\n    }\n    request(x) {\n        // make sure to throw if we're \"not connected\"\n        if (!this.chainId)\n            return Promise.reject(new Error());\n        switch (x.method) {\n            case 'eth_chainId':\n                return Promise.resolve(this.eth_chainId(this.chainId));\n            case 'eth_accounts':\n                return Promise.resolve(this.eth_accounts(this.accounts));\n            case 'eth_requestAccounts':\n                return Promise.resolve(this.eth_requestAccounts(this.accounts));\n            default:\n                throw new Error(`Method not supported on mock: ${JSON.stringify(x)}`);\n        }\n    }\n    emitConnect(chainId) {\n        this.emit('connect', { chainId });\n    }\n    emitDisconnect(error) {\n        this.emit('disconnect', error);\n    }\n    emitChainChanged(chainId) {\n        this.emit('chainChanged', chainId);\n    }\n    emitAccountsChanged(accounts) {\n        this.emit('accountsChanged', accounts);\n    }\n}\nexports.MockEIP1193Provider = MockEIP1193Provider;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvY29yZS9kaXN0L21vY2tzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELDJCQUEyQjtBQUMzQix3QkFBd0IsbUJBQU8sQ0FBQyxrRUFBZTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFpRSxrQkFBa0I7QUFDbkY7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLFNBQVM7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrY2hhaW4vLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvY29yZS9kaXN0L21vY2tzLmpzP2RjMmMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLk1vY2tFSVAxMTkzUHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCBldmVudGVtaXR0ZXIzXzEgPSByZXF1aXJlKFwiZXZlbnRlbWl0dGVyM1wiKTtcbmNsYXNzIE1vY2tFSVAxMTkzUHJvdmlkZXIgZXh0ZW5kcyBldmVudGVtaXR0ZXIzXzEuRXZlbnRFbWl0dGVyIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgdGhpcy5ldGhfY2hhaW5JZCA9IGplc3QuZm4oKGNoYWluSWQpID0+IGNoYWluSWQpO1xuICAgICAgICB0aGlzLmV0aF9hY2NvdW50cyA9IGplc3QuZm4oKGFjY291bnRzKSA9PiBhY2NvdW50cyk7XG4gICAgICAgIHRoaXMuZXRoX3JlcXVlc3RBY2NvdW50cyA9IGplc3QuZm4oKGFjY291bnRzKSA9PiBhY2NvdW50cyk7XG4gICAgfVxuICAgIHJlcXVlc3QoeCkge1xuICAgICAgICAvLyBtYWtlIHN1cmUgdG8gdGhyb3cgaWYgd2UncmUgXCJub3QgY29ubmVjdGVkXCJcbiAgICAgICAgaWYgKCF0aGlzLmNoYWluSWQpXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCkpO1xuICAgICAgICBzd2l0Y2ggKHgubWV0aG9kKSB7XG4gICAgICAgICAgICBjYXNlICdldGhfY2hhaW5JZCc6XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLmV0aF9jaGFpbklkKHRoaXMuY2hhaW5JZCkpO1xuICAgICAgICAgICAgY2FzZSAnZXRoX2FjY291bnRzJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRoaXMuZXRoX2FjY291bnRzKHRoaXMuYWNjb3VudHMpKTtcbiAgICAgICAgICAgIGNhc2UgJ2V0aF9yZXF1ZXN0QWNjb3VudHMnOlxuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGhpcy5ldGhfcmVxdWVzdEFjY291bnRzKHRoaXMuYWNjb3VudHMpKTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBNZXRob2Qgbm90IHN1cHBvcnRlZCBvbiBtb2NrOiAke0pTT04uc3RyaW5naWZ5KHgpfWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVtaXRDb25uZWN0KGNoYWluSWQpIHtcbiAgICAgICAgdGhpcy5lbWl0KCdjb25uZWN0JywgeyBjaGFpbklkIH0pO1xuICAgIH1cbiAgICBlbWl0RGlzY29ubmVjdChlcnJvcikge1xuICAgICAgICB0aGlzLmVtaXQoJ2Rpc2Nvbm5lY3QnLCBlcnJvcik7XG4gICAgfVxuICAgIGVtaXRDaGFpbkNoYW5nZWQoY2hhaW5JZCkge1xuICAgICAgICB0aGlzLmVtaXQoJ2NoYWluQ2hhbmdlZCcsIGNoYWluSWQpO1xuICAgIH1cbiAgICBlbWl0QWNjb3VudHNDaGFuZ2VkKGFjY291bnRzKSB7XG4gICAgICAgIHRoaXMuZW1pdCgnYWNjb3VudHNDaGFuZ2VkJywgYWNjb3VudHMpO1xuICAgIH1cbn1cbmV4cG9ydHMuTW9ja0VJUDExOTNQcm92aWRlciA9IE1vY2tFSVAxMTkzUHJvdmlkZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/core/dist/mocks.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/core/dist/provider.js":
/*!********************************************************!*\
  !*** ./node_modules/@web3-react/core/dist/provider.js ***!
  \********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.useWeb3React = exports.Web3ReactProvider = void 0;\nconst react_1 = __importStar(__webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\"));\nconst hooks_1 = __webpack_require__(/*! ./hooks */ \"(ssr)/./node_modules/@web3-react/core/dist/hooks.js\");\nconst Web3Context = (0, react_1.createContext)(undefined);\nfunction Web3ReactProvider({ children, connectors, connectorOverride, network, lookupENS = true, }) {\n    const cachedConnectors = (0, react_1.useRef)(connectors);\n    // because we're calling `getPriorityConnector` with these connectors, we need to ensure that they're not changing in place\n    if (connectors.length != cachedConnectors.current.length ||\n        connectors.some((connector, i) => {\n            const cachedConnector = cachedConnectors.current[i];\n            // because a \"connector\" is actually an array, we want to be sure to only perform an equality check on the actual Connector\n            // class instance, to see if they're the same object\n            return connector[0] !== cachedConnector[0];\n        }))\n        throw new Error('The connectors prop passed to Web3ReactProvider must be referentially static. If connectors is changing, try providing a key prop to Web3ReactProvider that changes every time connectors changes.');\n    const hooks = (0, hooks_1.getPriorityConnector)(...connectors);\n    const { usePriorityConnector, useSelectedChainId, useSelectedAccounts, useSelectedIsActivating, useSelectedAccount, useSelectedIsActive, useSelectedProvider, useSelectedENSNames, useSelectedENSName, } = hooks;\n    const priorityConnector = usePriorityConnector();\n    const connector = connectorOverride !== null && connectorOverride !== void 0 ? connectorOverride : priorityConnector;\n    const chainId = useSelectedChainId(connector);\n    const accounts = useSelectedAccounts(connector);\n    const isActivating = useSelectedIsActivating(connector);\n    const account = useSelectedAccount(connector);\n    const isActive = useSelectedIsActive(connector);\n    // note that we've omitted a <T extends BaseProvider = Web3Provider> generic type\n    // in Web3ReactProvider, and thus can't pass T through to useSelectedProvider below.\n    // this is because if we did so, the type of provider would include T, but that would\n    // conflict because Web3Context can't take a generic. however, this isn't particularly\n    // important, because useWeb3React (below) is manually typed\n    const provider = useSelectedProvider(connector, network);\n    const ENSNames = useSelectedENSNames(connector, lookupENS ? provider : undefined);\n    const ENSName = useSelectedENSName(connector, lookupENS ? provider : undefined);\n    return (react_1.default.createElement(Web3Context.Provider, { value: {\n            connector,\n            chainId,\n            accounts,\n            isActivating,\n            account,\n            isActive,\n            provider,\n            ENSNames,\n            ENSName,\n            hooks,\n        } }, children));\n}\nexports.Web3ReactProvider = Web3ReactProvider;\nfunction useWeb3React() {\n    const context = (0, react_1.useContext)(Web3Context);\n    if (!context)\n        throw Error('useWeb3React can only be used within the Web3ReactProvider component');\n    return context;\n}\nexports.useWeb3React = useWeb3React;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvY29yZS9kaXN0L3Byb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9DQUFvQztBQUNuRDtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQSwwQ0FBMEMsNEJBQTRCO0FBQ3RFLENBQUM7QUFDRDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxvQkFBb0IsR0FBRyx5QkFBeUI7QUFDaEQsNkJBQTZCLG1CQUFPLENBQUMsd0dBQU87QUFDNUMsZ0JBQWdCLG1CQUFPLENBQUMsb0VBQVM7QUFDakM7QUFDQSw2QkFBNkIscUVBQXFFO0FBQ2xHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFlBQVksaU1BQWlNO0FBQzdNO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ibG9ja2NoYWluLy4vbm9kZV9tb2R1bGVzL0B3ZWIzLXJlYWN0L2NvcmUvZGlzdC9wcm92aWRlci5qcz84NTdkIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xudmFyIF9fY3JlYXRlQmluZGluZyA9ICh0aGlzICYmIHRoaXMuX19jcmVhdGVCaW5kaW5nKSB8fCAoT2JqZWN0LmNyZWF0ZSA/IChmdW5jdGlvbihvLCBtLCBrLCBrMikge1xuICAgIGlmIChrMiA9PT0gdW5kZWZpbmVkKSBrMiA9IGs7XG4gICAgdmFyIGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG0sIGspO1xuICAgIGlmICghZGVzYyB8fCAoXCJnZXRcIiBpbiBkZXNjID8gIW0uX19lc01vZHVsZSA6IGRlc2Mud3JpdGFibGUgfHwgZGVzYy5jb25maWd1cmFibGUpKSB7XG4gICAgICBkZXNjID0geyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uKCkgeyByZXR1cm4gbVtrXTsgfSB9O1xuICAgIH1cbiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobywgazIsIGRlc2MpO1xufSkgOiAoZnVuY3Rpb24obywgbSwgaywgazIpIHtcbiAgICBpZiAoazIgPT09IHVuZGVmaW5lZCkgazIgPSBrO1xuICAgIG9bazJdID0gbVtrXTtcbn0pKTtcbnZhciBfX3NldE1vZHVsZURlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9fc2V0TW9kdWxlRGVmYXVsdCkgfHwgKE9iamVjdC5jcmVhdGUgPyAoZnVuY3Rpb24obywgdikge1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvLCBcImRlZmF1bHRcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdiB9KTtcbn0pIDogZnVuY3Rpb24obywgdikge1xuICAgIG9bXCJkZWZhdWx0XCJdID0gdjtcbn0pO1xudmFyIF9faW1wb3J0U3RhciA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnRTdGFyKSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgaWYgKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgcmV0dXJuIG1vZDtcbiAgICB2YXIgcmVzdWx0ID0ge307XG4gICAgaWYgKG1vZCAhPSBudWxsKSBmb3IgKHZhciBrIGluIG1vZCkgaWYgKGsgIT09IFwiZGVmYXVsdFwiICYmIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChtb2QsIGspKSBfX2NyZWF0ZUJpbmRpbmcocmVzdWx0LCBtb2QsIGspO1xuICAgIF9fc2V0TW9kdWxlRGVmYXVsdChyZXN1bHQsIG1vZCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLnVzZVdlYjNSZWFjdCA9IGV4cG9ydHMuV2ViM1JlYWN0UHJvdmlkZXIgPSB2b2lkIDA7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnRTdGFyKHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBob29rc18xID0gcmVxdWlyZShcIi4vaG9va3NcIik7XG5jb25zdCBXZWIzQ29udGV4dCA9ICgwLCByZWFjdF8xLmNyZWF0ZUNvbnRleHQpKHVuZGVmaW5lZCk7XG5mdW5jdGlvbiBXZWIzUmVhY3RQcm92aWRlcih7IGNoaWxkcmVuLCBjb25uZWN0b3JzLCBjb25uZWN0b3JPdmVycmlkZSwgbmV0d29yaywgbG9va3VwRU5TID0gdHJ1ZSwgfSkge1xuICAgIGNvbnN0IGNhY2hlZENvbm5lY3RvcnMgPSAoMCwgcmVhY3RfMS51c2VSZWYpKGNvbm5lY3RvcnMpO1xuICAgIC8vIGJlY2F1c2Ugd2UncmUgY2FsbGluZyBgZ2V0UHJpb3JpdHlDb25uZWN0b3JgIHdpdGggdGhlc2UgY29ubmVjdG9ycywgd2UgbmVlZCB0byBlbnN1cmUgdGhhdCB0aGV5J3JlIG5vdCBjaGFuZ2luZyBpbiBwbGFjZVxuICAgIGlmIChjb25uZWN0b3JzLmxlbmd0aCAhPSBjYWNoZWRDb25uZWN0b3JzLmN1cnJlbnQubGVuZ3RoIHx8XG4gICAgICAgIGNvbm5lY3RvcnMuc29tZSgoY29ubmVjdG9yLCBpKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBjYWNoZWRDb25uZWN0b3IgPSBjYWNoZWRDb25uZWN0b3JzLmN1cnJlbnRbaV07XG4gICAgICAgICAgICAvLyBiZWNhdXNlIGEgXCJjb25uZWN0b3JcIiBpcyBhY3R1YWxseSBhbiBhcnJheSwgd2Ugd2FudCB0byBiZSBzdXJlIHRvIG9ubHkgcGVyZm9ybSBhbiBlcXVhbGl0eSBjaGVjayBvbiB0aGUgYWN0dWFsIENvbm5lY3RvclxuICAgICAgICAgICAgLy8gY2xhc3MgaW5zdGFuY2UsIHRvIHNlZSBpZiB0aGV5J3JlIHRoZSBzYW1lIG9iamVjdFxuICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3RvclswXSAhPT0gY2FjaGVkQ29ubmVjdG9yWzBdO1xuICAgICAgICB9KSlcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdUaGUgY29ubmVjdG9ycyBwcm9wIHBhc3NlZCB0byBXZWIzUmVhY3RQcm92aWRlciBtdXN0IGJlIHJlZmVyZW50aWFsbHkgc3RhdGljLiBJZiBjb25uZWN0b3JzIGlzIGNoYW5naW5nLCB0cnkgcHJvdmlkaW5nIGEga2V5IHByb3AgdG8gV2ViM1JlYWN0UHJvdmlkZXIgdGhhdCBjaGFuZ2VzIGV2ZXJ5IHRpbWUgY29ubmVjdG9ycyBjaGFuZ2VzLicpO1xuICAgIGNvbnN0IGhvb2tzID0gKDAsIGhvb2tzXzEuZ2V0UHJpb3JpdHlDb25uZWN0b3IpKC4uLmNvbm5lY3RvcnMpO1xuICAgIGNvbnN0IHsgdXNlUHJpb3JpdHlDb25uZWN0b3IsIHVzZVNlbGVjdGVkQ2hhaW5JZCwgdXNlU2VsZWN0ZWRBY2NvdW50cywgdXNlU2VsZWN0ZWRJc0FjdGl2YXRpbmcsIHVzZVNlbGVjdGVkQWNjb3VudCwgdXNlU2VsZWN0ZWRJc0FjdGl2ZSwgdXNlU2VsZWN0ZWRQcm92aWRlciwgdXNlU2VsZWN0ZWRFTlNOYW1lcywgdXNlU2VsZWN0ZWRFTlNOYW1lLCB9ID0gaG9va3M7XG4gICAgY29uc3QgcHJpb3JpdHlDb25uZWN0b3IgPSB1c2VQcmlvcml0eUNvbm5lY3RvcigpO1xuICAgIGNvbnN0IGNvbm5lY3RvciA9IGNvbm5lY3Rvck92ZXJyaWRlICE9PSBudWxsICYmIGNvbm5lY3Rvck92ZXJyaWRlICE9PSB2b2lkIDAgPyBjb25uZWN0b3JPdmVycmlkZSA6IHByaW9yaXR5Q29ubmVjdG9yO1xuICAgIGNvbnN0IGNoYWluSWQgPSB1c2VTZWxlY3RlZENoYWluSWQoY29ubmVjdG9yKTtcbiAgICBjb25zdCBhY2NvdW50cyA9IHVzZVNlbGVjdGVkQWNjb3VudHMoY29ubmVjdG9yKTtcbiAgICBjb25zdCBpc0FjdGl2YXRpbmcgPSB1c2VTZWxlY3RlZElzQWN0aXZhdGluZyhjb25uZWN0b3IpO1xuICAgIGNvbnN0IGFjY291bnQgPSB1c2VTZWxlY3RlZEFjY291bnQoY29ubmVjdG9yKTtcbiAgICBjb25zdCBpc0FjdGl2ZSA9IHVzZVNlbGVjdGVkSXNBY3RpdmUoY29ubmVjdG9yKTtcbiAgICAvLyBub3RlIHRoYXQgd2UndmUgb21pdHRlZCBhIDxUIGV4dGVuZHMgQmFzZVByb3ZpZGVyID0gV2ViM1Byb3ZpZGVyPiBnZW5lcmljIHR5cGVcbiAgICAvLyBpbiBXZWIzUmVhY3RQcm92aWRlciwgYW5kIHRodXMgY2FuJ3QgcGFzcyBUIHRocm91Z2ggdG8gdXNlU2VsZWN0ZWRQcm92aWRlciBiZWxvdy5cbiAgICAvLyB0aGlzIGlzIGJlY2F1c2UgaWYgd2UgZGlkIHNvLCB0aGUgdHlwZSBvZiBwcm92aWRlciB3b3VsZCBpbmNsdWRlIFQsIGJ1dCB0aGF0IHdvdWxkXG4gICAgLy8gY29uZmxpY3QgYmVjYXVzZSBXZWIzQ29udGV4dCBjYW4ndCB0YWtlIGEgZ2VuZXJpYy4gaG93ZXZlciwgdGhpcyBpc24ndCBwYXJ0aWN1bGFybHlcbiAgICAvLyBpbXBvcnRhbnQsIGJlY2F1c2UgdXNlV2ViM1JlYWN0IChiZWxvdykgaXMgbWFudWFsbHkgdHlwZWRcbiAgICBjb25zdCBwcm92aWRlciA9IHVzZVNlbGVjdGVkUHJvdmlkZXIoY29ubmVjdG9yLCBuZXR3b3JrKTtcbiAgICBjb25zdCBFTlNOYW1lcyA9IHVzZVNlbGVjdGVkRU5TTmFtZXMoY29ubmVjdG9yLCBsb29rdXBFTlMgPyBwcm92aWRlciA6IHVuZGVmaW5lZCk7XG4gICAgY29uc3QgRU5TTmFtZSA9IHVzZVNlbGVjdGVkRU5TTmFtZShjb25uZWN0b3IsIGxvb2t1cEVOUyA/IHByb3ZpZGVyIDogdW5kZWZpbmVkKTtcbiAgICByZXR1cm4gKHJlYWN0XzEuZGVmYXVsdC5jcmVhdGVFbGVtZW50KFdlYjNDb250ZXh0LlByb3ZpZGVyLCB7IHZhbHVlOiB7XG4gICAgICAgICAgICBjb25uZWN0b3IsXG4gICAgICAgICAgICBjaGFpbklkLFxuICAgICAgICAgICAgYWNjb3VudHMsXG4gICAgICAgICAgICBpc0FjdGl2YXRpbmcsXG4gICAgICAgICAgICBhY2NvdW50LFxuICAgICAgICAgICAgaXNBY3RpdmUsXG4gICAgICAgICAgICBwcm92aWRlcixcbiAgICAgICAgICAgIEVOU05hbWVzLFxuICAgICAgICAgICAgRU5TTmFtZSxcbiAgICAgICAgICAgIGhvb2tzLFxuICAgICAgICB9IH0sIGNoaWxkcmVuKSk7XG59XG5leHBvcnRzLldlYjNSZWFjdFByb3ZpZGVyID0gV2ViM1JlYWN0UHJvdmlkZXI7XG5mdW5jdGlvbiB1c2VXZWIzUmVhY3QoKSB7XG4gICAgY29uc3QgY29udGV4dCA9ICgwLCByZWFjdF8xLnVzZUNvbnRleHQpKFdlYjNDb250ZXh0KTtcbiAgICBpZiAoIWNvbnRleHQpXG4gICAgICAgIHRocm93IEVycm9yKCd1c2VXZWIzUmVhY3QgY2FuIG9ubHkgYmUgdXNlZCB3aXRoaW4gdGhlIFdlYjNSZWFjdFByb3ZpZGVyIGNvbXBvbmVudCcpO1xuICAgIHJldHVybiBjb250ZXh0O1xufVxuZXhwb3J0cy51c2VXZWIzUmVhY3QgPSB1c2VXZWIzUmVhY3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/core/dist/provider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/metamask/dist/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/@web3-react/metamask/dist/index.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MetaMask = exports.NoMetaMaskError = void 0;\nconst types_1 = __webpack_require__(/*! @web3-react/types */ \"(ssr)/./node_modules/@web3-react/types/dist/index.js\");\nclass NoMetaMaskError extends Error {\n    constructor() {\n        super('MetaMask not installed');\n        this.name = NoMetaMaskError.name;\n        Object.setPrototypeOf(this, NoMetaMaskError.prototype);\n    }\n}\nexports.NoMetaMaskError = NoMetaMaskError;\nfunction parseChainId(chainId) {\n    return Number.parseInt(chainId, 16);\n}\nclass MetaMask extends types_1.Connector {\n    constructor({ actions, options, onError }) {\n        super(actions, onError);\n        this.options = options;\n    }\n    isomorphicInitialize() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.eagerConnection)\n                return;\n            return (this.eagerConnection = Promise.resolve().then(() => __importStar(__webpack_require__(/*! @metamask/detect-provider */ \"(ssr)/./node_modules/@metamask/detect-provider/dist/index.js\"))).then((m) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                const provider = yield m.default(this.options);\n                if (provider) {\n                    this.provider = provider;\n                    // handle the case when e.g. metamask and coinbase wallet are both installed\n                    if ((_a = this.provider.providers) === null || _a === void 0 ? void 0 : _a.length) {\n                        this.provider = (_b = this.provider.providers.find((p) => p.isMetaMask)) !== null && _b !== void 0 ? _b : this.provider.providers[0];\n                    }\n                    this.provider.on('connect', ({ chainId }) => {\n                        this.actions.update({ chainId: parseChainId(chainId) });\n                    });\n                    this.provider.on('disconnect', (error) => {\n                        var _a;\n                        // 1013 indicates that MetaMask is attempting to reestablish the connection\n                        // https://github.com/MetaMask/providers/releases/tag/v8.0.0\n                        if (error.code === 1013) {\n                            console.debug('MetaMask logged connection error 1013: \"Try again later\"');\n                            return;\n                        }\n                        this.actions.resetState();\n                        (_a = this.onError) === null || _a === void 0 ? void 0 : _a.call(this, error);\n                    });\n                    this.provider.on('chainChanged', (chainId) => {\n                        this.actions.update({ chainId: parseChainId(chainId) });\n                    });\n                    this.provider.on('accountsChanged', (accounts) => {\n                        if (accounts.length === 0) {\n                            // handle this edge case by disconnecting\n                            this.actions.resetState();\n                        }\n                        else {\n                            this.actions.update({ accounts });\n                        }\n                    });\n                }\n            })));\n        });\n    }\n    /** {@inheritdoc Connector.connectEagerly} */\n    connectEagerly() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const cancelActivation = this.actions.startActivation();\n            try {\n                yield this.isomorphicInitialize();\n                if (!this.provider)\n                    return cancelActivation();\n                // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n                // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n                const accounts = (yield this.provider.request({ method: 'eth_accounts' }));\n                if (!accounts.length)\n                    throw new Error('No accounts returned');\n                const chainId = (yield this.provider.request({ method: 'eth_chainId' }));\n                this.actions.update({ chainId: parseChainId(chainId), accounts });\n            }\n            catch (error) {\n                console.debug('Could not connect eagerly', error);\n                // we should be able to use `cancelActivation` here, but on mobile, metamask emits a 'connect'\n                // event, meaning that chainId is updated, and cancelActivation doesn't work because an intermediary\n                // update has occurred, so we reset state instead\n                this.actions.resetState();\n            }\n        });\n    }\n    /**\n     * Initiates a connection.\n     *\n     * @param desiredChainIdOrChainParameters - If defined, indicates the desired chain to connect to. If the user is\n     * already connected to this chain, no additional steps will be taken. Otherwise, the user will be prompted to switch\n     * to the chain, if one of two conditions is met: either they already have it added in their extension, or the\n     * argument is of type AddEthereumChainParameter, in which case the user will be prompted to add the chain with the\n     * specified parameters first, before being prompted to switch.\n     */\n    activate(desiredChainIdOrChainParameters) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            let cancelActivation;\n            if (!((_b = (_a = this.provider) === null || _a === void 0 ? void 0 : _a.isConnected) === null || _b === void 0 ? void 0 : _b.call(_a)))\n                cancelActivation = this.actions.startActivation();\n            return this.isomorphicInitialize()\n                .then(() => __awaiter(this, void 0, void 0, function* () {\n                if (!this.provider)\n                    throw new NoMetaMaskError();\n                // Wallets may resolve eth_chainId and hang on eth_accounts pending user interaction, which may include changing\n                // chains; they should be requested serially, with accounts first, so that the chainId can settle.\n                const accounts = (yield this.provider.request({ method: 'eth_requestAccounts' }));\n                const chainId = (yield this.provider.request({ method: 'eth_chainId' }));\n                const receivedChainId = parseChainId(chainId);\n                const desiredChainId = typeof desiredChainIdOrChainParameters === 'number'\n                    ? desiredChainIdOrChainParameters\n                    : desiredChainIdOrChainParameters === null || desiredChainIdOrChainParameters === void 0 ? void 0 : desiredChainIdOrChainParameters.chainId;\n                // if there's no desired chain, or it's equal to the received, update\n                if (!desiredChainId || receivedChainId === desiredChainId)\n                    return this.actions.update({ chainId: receivedChainId, accounts });\n                const desiredChainIdHex = `0x${desiredChainId.toString(16)}`;\n                // if we're here, we can try to switch networks\n                return this.provider\n                    .request({\n                    method: 'wallet_switchEthereumChain',\n                    params: [{ chainId: desiredChainIdHex }],\n                })\n                    .catch((error) => {\n                    var _a, _b;\n                    // https://github.com/MetaMask/metamask-mobile/issues/3312#issuecomment-1065923294\n                    const errorCode = ((_b = (_a = error.data) === null || _a === void 0 ? void 0 : _a.originalError) === null || _b === void 0 ? void 0 : _b.code) || error.code;\n                    // 4902 indicates that the chain has not been added to MetaMask and wallet_addEthereumChain needs to be called\n                    // https://docs.metamask.io/guide/rpc-api.html#wallet-switchethereumchain\n                    if (errorCode === 4902 && typeof desiredChainIdOrChainParameters !== 'number') {\n                        if (!this.provider)\n                            throw new Error('No provider');\n                        // if we're here, we can try to add a new network\n                        return this.provider.request({\n                            method: 'wallet_addEthereumChain',\n                            params: [Object.assign(Object.assign({}, desiredChainIdOrChainParameters), { chainId: desiredChainIdHex })],\n                        });\n                    }\n                    throw error;\n                })\n                    .then(() => this.activate(desiredChainId));\n            }))\n                .catch((error) => {\n                cancelActivation === null || cancelActivation === void 0 ? void 0 : cancelActivation();\n                throw error;\n            });\n        });\n    }\n    watchAsset({ address, symbol, decimals, image }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.provider)\n                throw new Error('No provider');\n            return this.provider\n                .request({\n                method: 'wallet_watchAsset',\n                params: {\n                    type: 'ERC20',\n                    options: {\n                        address,\n                        symbol,\n                        decimals,\n                        image, // A string url of the token logo\n                    },\n                },\n            })\n                .then((success) => {\n                if (!success)\n                    throw new Error('Rejected');\n                return true;\n            });\n        });\n    }\n}\nexports.MetaMask = MetaMask;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/metamask/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/store/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@web3-react/store/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.createWeb3ReactStoreAndActions = exports.MAX_SAFE_CHAIN_ID = void 0;\nconst address_1 = __webpack_require__(/*! @ethersproject/address */ \"(ssr)/./node_modules/@ethersproject/address/lib/index.js\");\nconst zustand_1 = __webpack_require__(/*! zustand */ \"(ssr)/./node_modules/zustand/esm/index.js\");\n/**\n * MAX_SAFE_CHAIN_ID is the upper bound limit on what will be accepted for `chainId`\n * `MAX_SAFE_CHAIN_ID = floor( ( 2**53 - 39 ) / 2 ) = 4503599627370476`\n *\n * @see {@link https://github.com/MetaMask/metamask-extension/blob/b6673731e2367e119a5fee9a454dd40bd4968948/shared/constants/network.js#L31}\n */\nexports.MAX_SAFE_CHAIN_ID = 4503599627370476;\nfunction validateChainId(chainId) {\n    if (!Number.isInteger(chainId) || chainId <= 0 || chainId > exports.MAX_SAFE_CHAIN_ID) {\n        throw new Error(`Invalid chainId ${chainId}`);\n    }\n}\nfunction validateAccount(account) {\n    return (0, address_1.getAddress)(account);\n}\nconst DEFAULT_STATE = {\n    chainId: undefined,\n    accounts: undefined,\n    activating: false,\n};\nfunction createWeb3ReactStoreAndActions() {\n    const store = (0, zustand_1.createStore)()(() => DEFAULT_STATE);\n    // flag for tracking updates so we don't clobber data when cancelling activation\n    let nullifier = 0;\n    /**\n     * Sets activating to true, indicating that an update is in progress.\n     *\n     * @returns cancelActivation - A function that cancels the activation by setting activating to false,\n     * as long as there haven't been any intervening updates.\n     */\n    function startActivation() {\n        const nullifierCached = ++nullifier;\n        store.setState(Object.assign(Object.assign({}, DEFAULT_STATE), { activating: true }));\n        // return a function that cancels the activation iff nothing else has happened\n        return () => {\n            if (nullifier === nullifierCached)\n                store.setState({ activating: false });\n        };\n    }\n    /**\n     * Used to report a `stateUpdate` which is merged with existing state. The first `stateUpdate` that results in chainId\n     * and accounts being set will also set activating to false, indicating a successful connection.\n     *\n     * @param stateUpdate - The state update to report.\n     */\n    function update(stateUpdate) {\n        // validate chainId statically, independent of existing state\n        if (stateUpdate.chainId !== undefined) {\n            validateChainId(stateUpdate.chainId);\n        }\n        // validate accounts statically, independent of existing state\n        if (stateUpdate.accounts !== undefined) {\n            for (let i = 0; i < stateUpdate.accounts.length; i++) {\n                stateUpdate.accounts[i] = validateAccount(stateUpdate.accounts[i]);\n            }\n        }\n        nullifier++;\n        store.setState((existingState) => {\n            var _a, _b;\n            // determine the next chainId and accounts\n            const chainId = (_a = stateUpdate.chainId) !== null && _a !== void 0 ? _a : existingState.chainId;\n            const accounts = (_b = stateUpdate.accounts) !== null && _b !== void 0 ? _b : existingState.accounts;\n            // ensure that the activating flag is cleared when appropriate\n            let activating = existingState.activating;\n            if (activating && chainId && accounts) {\n                activating = false;\n            }\n            return { chainId, accounts, activating };\n        });\n    }\n    /**\n     * Resets connector state back to the default state.\n     */\n    function resetState() {\n        nullifier++;\n        store.setState(DEFAULT_STATE);\n    }\n    return [store, { startActivation, update, resetState }];\n}\nexports.createWeb3ReactStoreAndActions = createWeb3ReactStoreAndActions;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3Qvc3RvcmUvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxzQ0FBc0MsR0FBRyx5QkFBeUI7QUFDbEUsa0JBQWtCLG1CQUFPLENBQUMsd0ZBQXdCO0FBQ2xELGtCQUFrQixtQkFBTyxDQUFDLDBEQUFTO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EseUJBQXlCO0FBQ3pCO0FBQ0E7QUFDQSwyQ0FBMkMsUUFBUTtBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFEQUFxRCxvQkFBb0Isa0JBQWtCO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyxtQkFBbUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGlDQUFpQztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLHFDQUFxQztBQUMxRDtBQUNBLHNDQUFzQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrY2hhaW4vLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3Qvc3RvcmUvZGlzdC9pbmRleC5qcz80NTljIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5jcmVhdGVXZWIzUmVhY3RTdG9yZUFuZEFjdGlvbnMgPSBleHBvcnRzLk1BWF9TQUZFX0NIQUlOX0lEID0gdm9pZCAwO1xuY29uc3QgYWRkcmVzc18xID0gcmVxdWlyZShcIkBldGhlcnNwcm9qZWN0L2FkZHJlc3NcIik7XG5jb25zdCB6dXN0YW5kXzEgPSByZXF1aXJlKFwienVzdGFuZFwiKTtcbi8qKlxuICogTUFYX1NBRkVfQ0hBSU5fSUQgaXMgdGhlIHVwcGVyIGJvdW5kIGxpbWl0IG9uIHdoYXQgd2lsbCBiZSBhY2NlcHRlZCBmb3IgYGNoYWluSWRgXG4gKiBgTUFYX1NBRkVfQ0hBSU5fSUQgPSBmbG9vciggKCAyKio1MyAtIDM5ICkgLyAyICkgPSA0NTAzNTk5NjI3MzcwNDc2YFxuICpcbiAqIEBzZWUge0BsaW5rIGh0dHBzOi8vZ2l0aHViLmNvbS9NZXRhTWFzay9tZXRhbWFzay1leHRlbnNpb24vYmxvYi9iNjY3MzczMWUyMzY3ZTExOWE1ZmVlOWE0NTRkZDQwYmQ0OTY4OTQ4L3NoYXJlZC9jb25zdGFudHMvbmV0d29yay5qcyNMMzF9XG4gKi9cbmV4cG9ydHMuTUFYX1NBRkVfQ0hBSU5fSUQgPSA0NTAzNTk5NjI3MzcwNDc2O1xuZnVuY3Rpb24gdmFsaWRhdGVDaGFpbklkKGNoYWluSWQpIHtcbiAgICBpZiAoIU51bWJlci5pc0ludGVnZXIoY2hhaW5JZCkgfHwgY2hhaW5JZCA8PSAwIHx8IGNoYWluSWQgPiBleHBvcnRzLk1BWF9TQUZFX0NIQUlOX0lEKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgSW52YWxpZCBjaGFpbklkICR7Y2hhaW5JZH1gKTtcbiAgICB9XG59XG5mdW5jdGlvbiB2YWxpZGF0ZUFjY291bnQoYWNjb3VudCkge1xuICAgIHJldHVybiAoMCwgYWRkcmVzc18xLmdldEFkZHJlc3MpKGFjY291bnQpO1xufVxuY29uc3QgREVGQVVMVF9TVEFURSA9IHtcbiAgICBjaGFpbklkOiB1bmRlZmluZWQsXG4gICAgYWNjb3VudHM6IHVuZGVmaW5lZCxcbiAgICBhY3RpdmF0aW5nOiBmYWxzZSxcbn07XG5mdW5jdGlvbiBjcmVhdGVXZWIzUmVhY3RTdG9yZUFuZEFjdGlvbnMoKSB7XG4gICAgY29uc3Qgc3RvcmUgPSAoMCwgenVzdGFuZF8xLmNyZWF0ZVN0b3JlKSgpKCgpID0+IERFRkFVTFRfU1RBVEUpO1xuICAgIC8vIGZsYWcgZm9yIHRyYWNraW5nIHVwZGF0ZXMgc28gd2UgZG9uJ3QgY2xvYmJlciBkYXRhIHdoZW4gY2FuY2VsbGluZyBhY3RpdmF0aW9uXG4gICAgbGV0IG51bGxpZmllciA9IDA7XG4gICAgLyoqXG4gICAgICogU2V0cyBhY3RpdmF0aW5nIHRvIHRydWUsIGluZGljYXRpbmcgdGhhdCBhbiB1cGRhdGUgaXMgaW4gcHJvZ3Jlc3MuXG4gICAgICpcbiAgICAgKiBAcmV0dXJucyBjYW5jZWxBY3RpdmF0aW9uIC0gQSBmdW5jdGlvbiB0aGF0IGNhbmNlbHMgdGhlIGFjdGl2YXRpb24gYnkgc2V0dGluZyBhY3RpdmF0aW5nIHRvIGZhbHNlLFxuICAgICAqIGFzIGxvbmcgYXMgdGhlcmUgaGF2ZW4ndCBiZWVuIGFueSBpbnRlcnZlbmluZyB1cGRhdGVzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHN0YXJ0QWN0aXZhdGlvbigpIHtcbiAgICAgICAgY29uc3QgbnVsbGlmaWVyQ2FjaGVkID0gKytudWxsaWZpZXI7XG4gICAgICAgIHN0b3JlLnNldFN0YXRlKE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9TVEFURSksIHsgYWN0aXZhdGluZzogdHJ1ZSB9KSk7XG4gICAgICAgIC8vIHJldHVybiBhIGZ1bmN0aW9uIHRoYXQgY2FuY2VscyB0aGUgYWN0aXZhdGlvbiBpZmYgbm90aGluZyBlbHNlIGhhcyBoYXBwZW5lZFxuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgICAgaWYgKG51bGxpZmllciA9PT0gbnVsbGlmaWVyQ2FjaGVkKVxuICAgICAgICAgICAgICAgIHN0b3JlLnNldFN0YXRlKHsgYWN0aXZhdGluZzogZmFsc2UgfSk7XG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFVzZWQgdG8gcmVwb3J0IGEgYHN0YXRlVXBkYXRlYCB3aGljaCBpcyBtZXJnZWQgd2l0aCBleGlzdGluZyBzdGF0ZS4gVGhlIGZpcnN0IGBzdGF0ZVVwZGF0ZWAgdGhhdCByZXN1bHRzIGluIGNoYWluSWRcbiAgICAgKiBhbmQgYWNjb3VudHMgYmVpbmcgc2V0IHdpbGwgYWxzbyBzZXQgYWN0aXZhdGluZyB0byBmYWxzZSwgaW5kaWNhdGluZyBhIHN1Y2Nlc3NmdWwgY29ubmVjdGlvbi5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBzdGF0ZVVwZGF0ZSAtIFRoZSBzdGF0ZSB1cGRhdGUgdG8gcmVwb3J0LlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHVwZGF0ZShzdGF0ZVVwZGF0ZSkge1xuICAgICAgICAvLyB2YWxpZGF0ZSBjaGFpbklkIHN0YXRpY2FsbHksIGluZGVwZW5kZW50IG9mIGV4aXN0aW5nIHN0YXRlXG4gICAgICAgIGlmIChzdGF0ZVVwZGF0ZS5jaGFpbklkICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHZhbGlkYXRlQ2hhaW5JZChzdGF0ZVVwZGF0ZS5jaGFpbklkKTtcbiAgICAgICAgfVxuICAgICAgICAvLyB2YWxpZGF0ZSBhY2NvdW50cyBzdGF0aWNhbGx5LCBpbmRlcGVuZGVudCBvZiBleGlzdGluZyBzdGF0ZVxuICAgICAgICBpZiAoc3RhdGVVcGRhdGUuYWNjb3VudHMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdGF0ZVVwZGF0ZS5hY2NvdW50cy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgICAgIHN0YXRlVXBkYXRlLmFjY291bnRzW2ldID0gdmFsaWRhdGVBY2NvdW50KHN0YXRlVXBkYXRlLmFjY291bnRzW2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBudWxsaWZpZXIrKztcbiAgICAgICAgc3RvcmUuc2V0U3RhdGUoKGV4aXN0aW5nU3RhdGUpID0+IHtcbiAgICAgICAgICAgIHZhciBfYSwgX2I7XG4gICAgICAgICAgICAvLyBkZXRlcm1pbmUgdGhlIG5leHQgY2hhaW5JZCBhbmQgYWNjb3VudHNcbiAgICAgICAgICAgIGNvbnN0IGNoYWluSWQgPSAoX2EgPSBzdGF0ZVVwZGF0ZS5jaGFpbklkKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBleGlzdGluZ1N0YXRlLmNoYWluSWQ7XG4gICAgICAgICAgICBjb25zdCBhY2NvdW50cyA9IChfYiA9IHN0YXRlVXBkYXRlLmFjY291bnRzKSAhPT0gbnVsbCAmJiBfYiAhPT0gdm9pZCAwID8gX2IgOiBleGlzdGluZ1N0YXRlLmFjY291bnRzO1xuICAgICAgICAgICAgLy8gZW5zdXJlIHRoYXQgdGhlIGFjdGl2YXRpbmcgZmxhZyBpcyBjbGVhcmVkIHdoZW4gYXBwcm9wcmlhdGVcbiAgICAgICAgICAgIGxldCBhY3RpdmF0aW5nID0gZXhpc3RpbmdTdGF0ZS5hY3RpdmF0aW5nO1xuICAgICAgICAgICAgaWYgKGFjdGl2YXRpbmcgJiYgY2hhaW5JZCAmJiBhY2NvdW50cykge1xuICAgICAgICAgICAgICAgIGFjdGl2YXRpbmcgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB7IGNoYWluSWQsIGFjY291bnRzLCBhY3RpdmF0aW5nIH07XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXNldHMgY29ubmVjdG9yIHN0YXRlIGJhY2sgdG8gdGhlIGRlZmF1bHQgc3RhdGUuXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVzZXRTdGF0ZSgpIHtcbiAgICAgICAgbnVsbGlmaWVyKys7XG4gICAgICAgIHN0b3JlLnNldFN0YXRlKERFRkFVTFRfU1RBVEUpO1xuICAgIH1cbiAgICByZXR1cm4gW3N0b3JlLCB7IHN0YXJ0QWN0aXZhdGlvbiwgdXBkYXRlLCByZXNldFN0YXRlIH1dO1xufVxuZXhwb3J0cy5jcmVhdGVXZWIzUmVhY3RTdG9yZUFuZEFjdGlvbnMgPSBjcmVhdGVXZWIzUmVhY3RTdG9yZUFuZEFjdGlvbnM7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/store/dist/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@web3-react/types/dist/index.js":
/*!******************************************************!*\
  !*** ./node_modules/@web3-react/types/dist/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Connector = void 0;\nclass Connector {\n    /**\n     * @param actions - Methods bound to a zustand store that tracks the state of the connector.\n     * @param onError - An optional handler which will report errors thrown from event listeners.\n     * Actions are used by the connector to report changes in connection status.\n     */\n    constructor(actions, onError) {\n        this.actions = actions;\n        this.onError = onError;\n    }\n    /**\n     * Reset the state of the connector without otherwise interacting with the connection.\n     */\n    resetState() {\n        this.actions.resetState();\n    }\n}\nexports.Connector = Connector;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvdHlwZXMvZGlzdC9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Jsb2NrY2hhaW4vLi9ub2RlX21vZHVsZXMvQHdlYjMtcmVhY3QvdHlwZXMvZGlzdC9pbmRleC5qcz8wNTUxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5Db25uZWN0b3IgPSB2b2lkIDA7XG5jbGFzcyBDb25uZWN0b3Ige1xuICAgIC8qKlxuICAgICAqIEBwYXJhbSBhY3Rpb25zIC0gTWV0aG9kcyBib3VuZCB0byBhIHp1c3RhbmQgc3RvcmUgdGhhdCB0cmFja3MgdGhlIHN0YXRlIG9mIHRoZSBjb25uZWN0b3IuXG4gICAgICogQHBhcmFtIG9uRXJyb3IgLSBBbiBvcHRpb25hbCBoYW5kbGVyIHdoaWNoIHdpbGwgcmVwb3J0IGVycm9ycyB0aHJvd24gZnJvbSBldmVudCBsaXN0ZW5lcnMuXG4gICAgICogQWN0aW9ucyBhcmUgdXNlZCBieSB0aGUgY29ubmVjdG9yIHRvIHJlcG9ydCBjaGFuZ2VzIGluIGNvbm5lY3Rpb24gc3RhdHVzLlxuICAgICAqL1xuICAgIGNvbnN0cnVjdG9yKGFjdGlvbnMsIG9uRXJyb3IpIHtcbiAgICAgICAgdGhpcy5hY3Rpb25zID0gYWN0aW9ucztcbiAgICAgICAgdGhpcy5vbkVycm9yID0gb25FcnJvcjtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVzZXQgdGhlIHN0YXRlIG9mIHRoZSBjb25uZWN0b3Igd2l0aG91dCBvdGhlcndpc2UgaW50ZXJhY3Rpbmcgd2l0aCB0aGUgY29ubmVjdGlvbi5cbiAgICAgKi9cbiAgICByZXNldFN0YXRlKCkge1xuICAgICAgICB0aGlzLmFjdGlvbnMucmVzZXRTdGF0ZSgpO1xuICAgIH1cbn1cbmV4cG9ydHMuQ29ubmVjdG9yID0gQ29ubmVjdG9yO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@web3-react/types/dist/index.js\n");

/***/ })

};
;